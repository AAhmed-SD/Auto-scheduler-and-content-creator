from typing import Any, Dict, List, Optional, Union
from datetime import datetime
from sqlalchemy.orm import Session
from ..models.user import User
from ..models.project import Project
from ..models.content import Content
from ..models.schedule import Schedule

class UserService:
    def __init__(self, db: Session) -> None: ...
    def get_user_by_email(self, email: str) -> Optional[User]: ...
    def create_user(self, user_data: Dict[str, Any]) -> User: ...
    def update_user(self, user_id: int, user_data: Dict[str, Any]) -> User: ...
    def delete_user(self, user_id: int) -> None: ...

class ProjectService:
    def __init__(self, db: Session) -> None: ...
    def create_project(self, project_data: Dict[str, Any]) -> Project: ...
    def get_project(self, project_id: int, user_id: int) -> Project: ...
    def get_user_projects(self, user_id: int) -> List[Project]: ...
    def update_project(self, project_id: int, project_data: Dict[str, Any]) -> Project: ...
    def delete_project(self, project_id: int) -> None: ...
    def add_project_member(self, project_id: int, user_id: int) -> Project: ...
    def remove_project_member(self, project_id: int, user_id: int) -> Project: ...

class ContentService:
    def __init__(self, db: Session) -> None: ...
    def create_content(self, content_data: Dict[str, Any]) -> Content: ...
    def get_content(self, content_id: int, user_id: int) -> Content: ...
    def get_project_content(self, project_id: int, user_id: int) -> List[Content]: ...
    def update_content(self, content_id: int, content_data: Dict[str, Any]) -> Content: ...
    def delete_content(self, content_id: int) -> None: ...
    def get_scheduled_content(self, user_id: int, start_time: Optional[datetime] = None, end_time: Optional[datetime] = None) -> List[Content]: ...

class SchedulingService:
    def __init__(self, db: Session) -> None: ...
    def create_schedule(self, schedule_data: Dict[str, Any]) -> Schedule: ...
    def get_schedules(self, user_id: int, start_time: Optional[datetime] = None, end_time: Optional[datetime] = None) -> List[Schedule]: ...
    def delete_schedule(self, schedule_id: int, user_id: int) -> None: ... 